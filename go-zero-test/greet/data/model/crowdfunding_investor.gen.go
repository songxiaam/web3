// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameCrowdfundingInvestor = "crowdfunding_investor"

// CrowdfundingInvestor mapped from table <crowdfunding_investor>
type CrowdfundingInvestor struct {
	ID               int64     `gorm:"column:id;primaryKey" json:"id"`
	CrowdfundingID   int64     `gorm:"column:crowdfunding_id;not null;comment:Crowdfunding id" json:"crowdfunding_id"`                                          // Crowdfunding id
	ComerID          int64     `gorm:"column:comer_id;not null;comment:Investor' comer id" json:"comer_id"`                                                     // Investor' comer id
	BuyTokenTotal    float64   `gorm:"column:buy_token_total;not null;default:0.000000000000000000;comment:Buy token total" json:"buy_token_total"`             // Buy token total
	BuyTokenBalance  float64   `gorm:"column:buy_token_balance;not null;default:0.000000000000000000;comment:Buy token balance" json:"buy_token_balance"`       // Buy token balance
	SellTokenTotal   float64   `gorm:"column:sell_token_total;not null;default:0.000000000000000000;comment:Selling token total" json:"sell_token_total"`       // Selling token total
	SellTokenBalance float64   `gorm:"column:sell_token_balance;not null;default:0.000000000000000000;comment:Selling token balance" json:"sell_token_balance"` // Selling token balance
	CreatedAt        time.Time `gorm:"column:created_at;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt        time.Time `gorm:"column:updated_at;not null;default:CURRENT_TIMESTAMP" json:"updated_at"`
}

// TableName CrowdfundingInvestor's table name
func (*CrowdfundingInvestor) TableName() string {
	return TableNameCrowdfundingInvestor
}
